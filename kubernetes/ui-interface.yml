kind: ConfigMap
apiVersion: v1
metadata:
  name: ui-interface
  namespace: spring-cloud-kubernetes-demo
data:
  application.yaml: |-
    server:
      forward-headers-strategy: framework

    spring:
      redis:
        host: redis-svc

      cloud:
        gateway:
          routes:
            - id: hello-service
              uri: lb://hello-service/
              predicates:
                - Path=/hello-service/**
              filters:
                - StripPrefix=1

            - id: message-service
              uri: lb://message-service/
              predicates:
                - Path=/message-service/**
              filters:
                - StripPrefix=1
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui-interface
  namespace: spring-cloud-kubernetes-demo
  labels:
    app: ui-interface
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: ui-interface
  template:
    metadata:
      labels:
        app: ui-interface
    spec:
      containers:
        - name: ui-interface
          image: mrflick72/ui-interface:revamp
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1

          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
---

kind: Service
apiVersion: v1
metadata:
  name: ui-interface
  namespace: spring-cloud-kubernetes-demo
spec:
  selector:
    app: ui-interface
  ports:
    - protocol: TCP
      port: 8080
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ui-interface-ingress
  namespace: spring-cloud-kubernetes-demo
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ui-interface
                port:
                  number: 8080
      host: spring-cloud-kubernetes-demo.com
  tls:
    - secretName: vvaudi-lab.com-letsencrypt
      hosts:
        - spring-cloud-kubernetes-demo.vvaudi-lab.com
---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: spring-cloud-kubernetes-demo
  name: namespace-reader
rules:
  - apiGroups: [""]
    resources: ["configmaps", "pods", "services", "endpoints", "secrets"]
    verbs: ["get", "list", "watch"]

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: namespace-reader-binding
  namespace: spring-cloud-kubernetes-demo
subjects:
  - kind: ServiceAccount
    name: default
    apiGroup: ""
roleRef:
  kind: Role
  name: namespace-reader
  apiGroup: ""